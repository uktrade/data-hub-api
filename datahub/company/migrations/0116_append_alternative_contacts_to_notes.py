# Generated by Django 3.2.12 on 2022-03-22 15:27

from django.db import migrations

from django.db.models import Case, CharField, ExpressionWrapper, F, Q, Value, When

from django.db.models.functions import Concat


def append_alternative_contacts_to_notes(apps, schema_editor):
    """Combine phone number fields into a single field"""
    Contact = apps.get_model('company', 'Contact')
    Contact.objects.all().update(
        notes=Concat(
            Case(
                When(
                    ~Q(notes='') & Q(notes__isnull=False),
                    then=Concat(
                        ExpressionWrapper(F('notes'), output_field=CharField()),
                        Value('\n\n')
                    ),
                ),
                default=Value('')
            ),
            Case(
                When(
                    Q(~Q(telephone_alternative='') & Q(telephone_alternative__isnull=False)),
                    then=Concat(
                        Value('Alternative telephone: '),
                        F('telephone_alternative'),
                        Value('\n\n'),
                    ),
                ),
                default=Value('')
            ),
            Case(
                When(
                    Q(~Q(email_alternative='') & Q(email_alternative__isnull=False)),
                    then=Concat(
                        Value('Alternative email: '),
                        ExpressionWrapper(F('email_alternative'), output_field=CharField()),
                    ),
                ),
                default=Value('')
            ),
        ),
    )


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0115_populate_full_telephone_number'),
    ]

    operations = [
        migrations.RunPython(append_alternative_contacts_to_notes, migrations.RunPython.noop),
    ]
