# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-04-19 10:59
from __future__ import unicode_literals

import datahub.company.models
import datahub.company.validators
import datahub.core.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    replaces = [('company', '0001_initial'), ('company', '0002_auto_20161124_0920'), ('company', '0003_auto_20161125_0332'), ('company', '0004_auto_20161129_0423'), ('company', '0005_auto_20161129_0950'), ('company', '0006_auto_20161130_0507'), ('company', '0007_auto_20161201_0527'), ('company', '0004_auto_20161129_0556'), ('company', '0005_merge_20161129_0926'), ('company', '0008_merge_20161207_0414'), ('company', '0009_auto_20161214_0343'), ('company', '0010_auto_20170113_0610'), ('company', '0011_auto_20170113_1006'), ('company', '0012_auto_20170201_1458'), ('company', '0013_auto_20170201_1557'), ('company', '0014_auto_20170201_1601'), ('company', '0013_auto_20170203_1222'), ('company', '0015_merge_20170206_1630'), ('company', '0016_auto_20170216_1153'), ('company', '0017_auto_20170222_1028'), ('company', '0018_advisor_enabled'), ('company', '0019_auto_20170227_1647'), ('company', '0020_company_headquarter_type'), ('company', '0021_auto_20170308_1157'), ('company', '0022_auto_20170329_1049')]

    initial = True

    dependencies = [
        ('metadata', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
        ('metadata', '0007_companyclassification'),
        ('interaction', '0001_initial'),
        ('metadata', '0006_headquartertype'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advisor',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=255, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CompaniesHouseCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('registered_address_1', models.CharField(max_length=255)),
                ('registered_address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_address_3', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_address_4', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_address_town', models.CharField(max_length=255)),
                ('registered_address_county', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_address_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('company_number', models.CharField(max_length=255, unique=True)),
                ('company_category', models.CharField(blank=True, max_length=255)),
                ('company_status', models.CharField(blank=True, max_length=255)),
                ('sic_code_1', models.CharField(blank=True, max_length=255)),
                ('sic_code_2', models.CharField(blank=True, max_length=255)),
                ('sic_code_3', models.CharField(blank=True, max_length=255)),
                ('sic_code_4', models.CharField(blank=True, max_length=255)),
                ('uri', models.CharField(blank=True, max_length=255)),
                ('incorporation_date', models.DateField(null=True)),
                ('registered_address_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companieshousecompanys', to='metadata.Country')),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('modified_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('archived', models.BooleanField(default=False)),
                ('archived_on', models.DateTimeField(null=True)),
                ('archived_reason', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('modified_on', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('registered_address_1', models.CharField(max_length=255)),
                ('registered_address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_address_3', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_address_4', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_address_town', models.CharField(max_length=255)),
                ('registered_address_county', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_address_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('company_number', models.CharField(blank=True, max_length=255, null=True)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('alias', models.CharField(blank=True, help_text='Trading name', max_length=255, null=True)),
                ('lead', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('trading_address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('trading_address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('trading_address_3', models.CharField(blank=True, max_length=255, null=True)),
                ('trading_address_4', models.CharField(blank=True, max_length=255, null=True)),
                ('trading_address_town', models.CharField(blank=True, max_length=255, null=True)),
                ('trading_address_county', models.CharField(blank=True, max_length=255, null=True)),
                ('trading_address_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('account_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL)),
                ('archived_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('business_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.BusinessType')),
                ('employee_range', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='company.EmployeeRange')),
                ('export_to_countries', models.ManyToManyField(blank=True, null=True, related_name='company_export_to_countries', to='company.Country')),
                ('future_interest_countries', models.ManyToManyField(blank=True, null=True, related_name='company_future_interest_countries', to='company.Country')),
                ('registered_address_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_company_related', related_query_name='(app_label)s_companys', to='company.Country')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.Sector')),
                ('trading_address_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_trading_address_country', to='company.Country')),
            ],
            options={
                'verbose_name_plural': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('archived', models.BooleanField(default=False)),
                ('archived_on', models.DateTimeField(null=True)),
                ('archived_reason', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('modified_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('primary', models.BooleanField()),
                ('telephone_countrycode', models.CharField(max_length=255)),
                ('telephone_number', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('address_same_as_company', models.BooleanField(default=False)),
                ('address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('address_3', models.CharField(blank=True, max_length=255, null=True)),
                ('address_4', models.CharField(blank=True, max_length=255, null=True)),
                ('address_town', models.CharField(blank=True, max_length=255, null=True)),
                ('address_county', models.CharField(blank=True, max_length=255, null=True)),
                ('address_postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('telephone_alternative', models.CharField(blank=True, max_length=255, null=True)),
                ('email_alternative', models.EmailField(blank=True, max_length=254, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('address_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='metadata.Country')),
                ('advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to=settings.AUTH_USER_MODEL)),
                ('archived_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='company.Company')),
                ('teams', models.ManyToManyField(blank=True, to='metadata.Team')),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metadata.Title')),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='company',
            name='turnover_range',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='metadata.TurnoverRange'),
        ),
        migrations.AddField(
            model_name='company',
            name='uk_region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='metadata.UKRegion'),
        ),
        migrations.AddField(
            model_name='advisor',
            name='dit_team',
            field=models.ForeignKey(default='0167b456-0ddd-49bd-8184-e3227a0b6396', on_delete=django.db.models.deletion.CASCADE, to='metadata.Team'),
        ),
        migrations.AddField(
            model_name='advisor',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='advisor',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='advisor',
            name='email',
            field=models.EmailField(max_length=254),
        ),
        migrations.AlterField(
            model_name='advisor',
            name='username',
            field=models.CharField(blank=True, max_length=255, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()]),
        ),
        migrations.AlterField(
            model_name='company',
            name='business_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metadata.BusinessType'),
        ),
        migrations.AlterField(
            model_name='company',
            name='employee_range',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='metadata.EmployeeRange'),
        ),
        migrations.AlterField(
            model_name='company',
            name='export_to_countries',
            field=models.ManyToManyField(blank=True, null=True, related_name='company_export_to_countries', to='metadata.Country'),
        ),
        migrations.AlterField(
            model_name='company',
            name='future_interest_countries',
            field=models.ManyToManyField(blank=True, null=True, related_name='company_future_interest_countries', to='metadata.Country'),
        ),
        migrations.AlterField(
            model_name='company',
            name='registered_address_country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_company_related', related_query_name='(app_label)s_companys', to='metadata.Country'),
        ),
        migrations.AlterField(
            model_name='company',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metadata.Sector'),
        ),
        migrations.AlterField(
            model_name='company',
            name='trading_address_country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_trading_address_country', to='metadata.Country'),
        ),
        migrations.DeleteModel(
            name='BusinessType',
        ),
        migrations.AlterField(
            model_name='advisor',
            name='first_name',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='advisor',
            name='last_name',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterModelOptions(
            name='advisor',
            options={},
        ),
        migrations.RemoveField(
            model_name='advisor',
            name='username',
        ),
        migrations.AlterField(
            model_name='advisor',
            name='email',
            field=models.EmailField(max_length=255, unique=True),
        ),
        migrations.AlterModelManagers(
            name='advisor',
            managers=[
                ('objects', datahub.company.models.AdvisorManager()),
            ],
        ),
        migrations.AlterField(
            model_name='advisor',
            name='email',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='advisor',
            name='date_joined',
            field=models.DateTimeField(auto_now_add=True, verbose_name='date joined'),
        ),
        migrations.AlterField(
            model_name='advisor',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AlterField(
            model_name='company',
            name='website',
            field=models.CharField(blank=True, max_length=255, null=True, validators=[datahub.company.validators.RelaxedURLValidator]),
        ),
        migrations.AlterField(
            model_name='company',
            name='registered_address_country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companys', to='metadata.Country'),
        ),
        migrations.AlterModelOptions(
            name='companieshousecompany',
            options={'verbose_name_plural': 'Companies House companies'},
        ),
        migrations.RunSQL(
            sql='CREATE EXTENSION IF NOT EXISTS citext;',
            reverse_sql='',
        ),
        migrations.AlterField(
            model_name='advisor',
            name='email',
            field=datahub.core.fields.CICharField(max_length=255, unique=True),
        ),
        migrations.AddField(
            model_name='advisor',
            name='enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.RunPython(
            code=django.db.migrations.operations.special.RunPython.noop,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AddField(
            model_name='company',
            name='headquarter_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metadata.HeadquarterType'),
        ),
        migrations.AddField(
            model_name='company',
            name='classification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='metadata.CompanyClassification'),
        ),
        migrations.AddField(
            model_name='company',
            name='one_list_account_owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='one_list_owned_companies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='company',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subsidiaries', to='company.Company'),
        ),
    ]
