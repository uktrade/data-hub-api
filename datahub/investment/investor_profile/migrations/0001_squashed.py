# Generated by Django 2.2.8 on 2019-12-05 16:08
from pathlib import PurePath

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid

from datahub.core.migration_utils import load_yaml_data_in_migration

metadata_files = [
    'asset_class_interest_sector.yaml',
    'asset_class_interest.yaml',
    'required_checks_conducted.yaml',
    'construction_risk.yaml',
    'deal_ticket_size.yaml',
    'desired_deal_role.yaml',
    'equity_percentage.yaml',
    'investor_type.yaml',
    'large_capital_investment_type.yaml',
    'restriction.yaml',
    'return_rate.yaml',
    'time_horizon.yaml'
]


def load_metadata(apps, schema_editor):
    for file_name in metadata_files:
        load_yaml_data_in_migration(
            apps,
            PurePath(__file__).parent / f'0001_squashed/{file_name}',
        )


class Migration(migrations.Migration):
    replaces = [
        ('investor_profile', '0001_initial'),
        ('investor_profile', '0002_auto_20190319_1611'),
        ('investor_profile', '0003_auto_20190412_1437'),
        ('investor_profile', '0004_auto_20190512_2123'),
        ('investor_profile', '0005_delete_profiletype'),
        ('investor_profile', '0006_fix_asset_class_spellings'),
        ('investor_profile', '0007_add_bank_and_corporate_investor_to_investor_type'),
        ('investor_profile', '0008_remove_investor_profile_and_type_from_db'),
    ]

    initial = True

    dependencies = [
        ('company', '0001_squashed_0096_company_global_ultimate_duns_number'),
        ('metadata', '0001_squashed_0010_auto_20180613_1553'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetClassInterestSector',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConstructionRisk',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DealTicketSize',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DesiredDealRole',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquityPercentage',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvestorType',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LargeCapitalInvestmentType',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequiredChecksConducted',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Restriction',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReturnRate',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeHorizon',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssetClassInterest',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
                ('asset_class_interest_sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_class_interests', to='investor_profile.AssetClassInterestSector')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LargeCapitalInvestorProfile',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('investable_capital', models.BigIntegerField(blank=True, help_text='Investable capital amount in USD', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('global_assets_under_management', models.BigIntegerField(blank=True, help_text='Global assets under management amount in USD', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('investor_description', models.TextField(blank=True)),
                ('required_checks_conducted_on', models.DateField(blank=True, null=True)),
                ('notes_on_locations', models.TextField(blank=True)),
                ('asset_classes_of_interest', models.ManyToManyField(blank=True, related_name='_largecapitalinvestorprofile_asset_classes_of_interest_+', to='investor_profile.AssetClassInterest')),
                ('construction_risks', models.ManyToManyField(blank=True, related_name='_largecapitalinvestorprofile_construction_risks_+', to='investor_profile.ConstructionRisk')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('deal_ticket_sizes', models.ManyToManyField(blank=True, related_name='_largecapitalinvestorprofile_deal_ticket_sizes_+', to='investor_profile.DealTicketSize')),
                ('desired_deal_roles', models.ManyToManyField(blank=True, related_name='_largecapitalinvestorprofile_desired_deal_roles_+', to='investor_profile.DesiredDealRole')),
                ('investment_types', models.ManyToManyField(blank=True, related_name='_largecapitalinvestorprofile_investment_types_+', to='investor_profile.LargeCapitalInvestmentType')),
                ('investor_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='investor_profiles', to='company.Company')),
                ('investor_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='investor_profile.InvestorType')),
                ('minimum_equity_percentage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='investor_profile.EquityPercentage')),
                ('minimum_return_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='investor_profile.ReturnRate')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('other_countries_being_considered', models.ManyToManyField(blank=True, help_text='The other countries being considered for investment', related_name='_largecapitalinvestorprofile_other_countries_being_considered_+', to='metadata.Country')),
                ('required_checks_conducted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='investor_profile.RequiredChecksConducted')),
                ('required_checks_conducted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('restrictions', models.ManyToManyField(blank=True, related_name='_largecapitalinvestorprofile_restrictions_+', to='investor_profile.Restriction')),
                ('time_horizons', models.ManyToManyField(blank=True, related_name='_largecapitalinvestorprofile_time_horizons_+', to='investor_profile.TimeHorizon')),
                ('uk_region_locations', models.ManyToManyField(blank=True, related_name='_largecapitalinvestorprofile_uk_region_locations_+', to='metadata.UKRegion', verbose_name='possible UK regions')),
            ],
            options={
                'verbose_name_plural': 'large capital profiles',
                'permissions': (('export_largecapitalinvestorprofile', 'Can export large capital investor profiles'),),
            },
        ),
        migrations.RunPython(load_metadata, migrations.RunPython.noop),
    ]
