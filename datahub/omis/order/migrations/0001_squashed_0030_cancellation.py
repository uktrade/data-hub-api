# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-26 13:33
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import uuid


def create_default_hourlyrate(apps, schema_editor):
    HourlyRate = apps.get_model('order', 'HourlyRate')
    HourlyRate.objects.get_or_create(
        id='7e1ca5c3-dc5a-e511-9d3c-e4115bead28a',
        defaults={
            'name': 'Default rate',
            'rate_value': 1000,
            'vat_value': '20.00'
        }
    )


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('metadata', '0001_squashed_0011_add_default_id_for_metadata'),
        ('omis-invoice', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('omis-quote', '0001_initial'),
        ('company', '0001_squashed_0056_number_of_employees'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HourlyRate',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('rate_value', models.PositiveIntegerField(help_text='Rate in pence. E.g. 1 pound should be stored as 100 (100 pence).')),
                ('vat_value', models.DecimalField(decimal_places=2, help_text='VAT to apply as percentage value (0.00 to 100.00).', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
                'db_table': 'omis-order_hourlyrate',
            },
        ),
        migrations.RunPython(
            code=create_default_hourlyrate,
            reverse_code=migrations.RunPython.noop
        ),
        migrations.CreateModel(
            name='CancellationReason',
            fields=[
                ('disabled_on', models.DateTimeField(blank=True, null=True)),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('order', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('reference', models.CharField(max_length=100)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='company.Company')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='company.Contact')),
                ('primary_market', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='metadata.Country')),
                ('sector', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='metadata.Sector')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('contacts_not_to_approach', models.TextField(blank=True, help_text='Specific people or organisations the company does not want DIT to talk to.')),
                ('description', models.TextField(blank=True, help_text='Description of the work needed.')),
                ('existing_agents', models.TextField(blank=True, help_text='Contacts the company already has in the market.')),
                ('further_info', models.TextField(blank=True, help_text='Additional notes and useful information.')),
                ('permission_to_approach_contacts', models.TextField(blank=True, editable=False, help_text='Legacy field. Can DIT speak to the contacts?')),
                ('product_info', models.TextField(blank=True, editable=False, help_text='Legacy field. What is the product?')),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, editable=False, help_text='Legacy field. Contact email specified for this order.', max_length=254)),
                ('contact_phone', models.CharField(blank=True, editable=False, help_text='Legacy field. Contact phone number specified for this order.', max_length=254)),
                ('quote', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='omis-quote.Quote')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('quote_awaiting_acceptance', 'Quote awaiting acceptance'), ('quote_accepted', 'Quote accepted'), ('paid', 'Paid'), ('complete', 'Complete'), ('cancelled', 'Cancelled')], default='draft', max_length=100)),
                ('po_number', models.CharField(blank=True, max_length=100)),
                ('discount_label', models.CharField(blank=True, max_length=100)),
                ('discount_value', models.PositiveIntegerField(default=0)),
                ('vat_number', models.CharField(blank=True, max_length=100)),
                ('vat_status', models.CharField(blank=True, choices=[('uk', 'UK'), ('eu', 'EU excluding the UK'), ('outside_eu', 'Outside the EU')], max_length=100)),
                ('vat_verified', models.NullBooleanField()),
                ('net_cost', models.PositiveIntegerField(default=0, help_text='Total hours * hourly rate in pence.')),
                ('subtotal_cost', models.PositiveIntegerField(default=0, help_text='Net cost - discount value in pence.')),
                ('total_cost', models.PositiveIntegerField(default=0, help_text='Subtotal + VAT cost in pence.')),
                ('vat_cost', models.PositiveIntegerField(default=0, help_text='VAT amount of subtotal in pence.')),
                ('public_token', models.CharField(help_text='Used for public facing access.', max_length=100, unique=True)),
                ('billing_address_1', models.CharField(blank=True, max_length=255)),
                ('billing_address_2', models.CharField(blank=True, max_length=255)),
                ('billing_address_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='metadata.Country')),
                ('billing_address_county', models.CharField(blank=True, max_length=255)),
                ('billing_address_postcode', models.CharField(blank=True, max_length=100)),
                ('billing_address_town', models.CharField(blank=True, max_length=255)),
                ('billing_contact_name', models.CharField(blank=True, max_length=255, editable=False, help_text='Legacy field. Billing contact name.')),
                ('billing_email', models.EmailField(blank=True, max_length=255, editable=False, help_text='Legacy field. Billing email address.')),
                ('billing_phone', models.CharField(blank=True, max_length=150, editable=False, help_text='Legacy field. Billing phone number.')),
                ('invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='omis-invoice.Invoice')),
                ('archived_documents_url_path', models.CharField(blank=True, editable=False, help_text='Legacy field. Link to the archived documents for this order.', max_length=255)),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('cancelled_on', models.DateTimeField(blank=True, null=True)),
                ('service_types', models.ManyToManyField(blank=True, related_name='orders', to='order.ServiceType')),
                ('hourly_rate', models.ForeignKey(default='7e1ca5c3-dc5a-e511-9d3c-e4115bead28a', on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='order.HourlyRate')),
                ('cancellation_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='order.CancellationReason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderSubscriber',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('adviser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='order.Order')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='ordersubscriber',
            unique_together=set([('order', 'adviser')]),
        ),
        migrations.CreateModel(
            name='OrderAssignee',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('estimated_time', models.IntegerField(default=0, help_text='Estimated time in minutes.', validators=[django.core.validators.MinValueValidator(0)])),
                ('is_lead', models.BooleanField(default=False)),
                ('adviser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='metadata.Country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignees', to='order.Order')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='metadata.Team')),
                ('actual_time', models.IntegerField(blank=True, help_text='Actual time in minutes.', null=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['created_on'],
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='orderassignee',
            unique_together=set([('order', 'adviser')]),
        ),
    ]
