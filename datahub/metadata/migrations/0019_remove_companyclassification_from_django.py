# Generated by Django 2.1.3 on 2019-01-03 21:02

from logging import getLogger

from django.db import migrations


PERMISSIONS_TO_DELETE = (
    'view_companyclassification',
    'add_companyclassification',
    'change_companyclassification',
    'delete_companyclassification',
)

logger = getLogger(__name__)


def delete_companyclassification_permissions(apps, schema_editor):
    permission_model = apps.get_model('auth', 'Permission')

    _, deletions_by_model = permission_model.objects.filter(
        codename__in=PERMISSIONS_TO_DELETE,
        content_type__app_label='metadata',
        content_type__model='companyclassification',
    ).delete()

    logger.info(
        f'Deleted companyclassification permissions, breakdown of deleted objects: {deletions_by_model}',
    )

def delete_companyclassification_contenttype(apps, schema_editor):
    content_type_model = apps.get_model('contenttypes', 'ContentType')

    _, deletions_by_model = content_type_model.objects.filter(
        app_label='metadata',
        model='companyclassification',
    ).delete()

    logger.info(
        f'Deleted companyclassification content type, breakdown of deleted objects: {deletions_by_model}',
    )


class Migration(migrations.Migration):

    dependencies = [
        ('metadata', '0018_add_sector_cluster_to_sector'),
        ('company', '0058_remove_classification_from_database'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.DeleteModel(
                    name='CompanyClassification',
                ),
            ],
        ),
        migrations.RunPython(delete_companyclassification_permissions, migrations.RunPython.noop, elidable=True),
        migrations.RunPython(delete_companyclassification_contenttype, migrations.RunPython.noop, elidable=True),
    ]
