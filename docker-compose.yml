services:
  api:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -timeout 120s
    env_file: .env
    depends_on:
      - postgres
      - opensearch
      - redis
    command: /app/start-dev.sh

  rq_short:
    build:
      context: .
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -wait tcp://api:8000 -timeout 300s
    env_file: .env
    depends_on:
      - api
    command: python short-running-worker.py
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python ./manage.py rq_health_check --queue=short-running",
        ]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s

  rq_long:
    build:
      context: .
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -wait tcp://api:8000 -timeout 300s
    env_file: .env
    depends_on:
      - api
    command: python long-running-worker.py
    healthcheck:
      test:
        ["CMD-SHELL", "python ./manage.py rq_health_check --queue=long-running"]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s

  rq_sched:
    build:
      context: .
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -wait tcp://api:8000 -timeout 300s
    env_file: .env
    depends_on:
      - api
    command: python cron-scheduler.py

  postgres:
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=datahub
      - POSTGRES_PASSWORD=datahub

  opensearch:
    image: opensearchproject/opensearch:2.11.0
    environment:
      - plugins.security.disabled=true
      - cluster.name=cluster-001
      - node.name=node-001
      - discovery.type=single-node
      - bootstrap.memory_lock=true
    ports:
      - "9200:9200"

  redis:
    image: redis:7.2.4
    restart: always
    ports:
      - "6379:6379"

  rq_exporter:
    image: mdawar/rq-exporter:latest
    ports:
      - target: 9726
        published: 9726
        protocol: tcp
        mode: host
    environment:
      RQ_REDIS_HOST: "redis"
    depends_on:
      - redis

  localstack:
    build:
      context: .localstack
      dockerfile: Dockerfile
    ports:
      - '4563-4599:4563-4599'
    environment:
      - DISABLE_CORS_CHECKS=1
      - DISABLE_CUSTOM_CORS_S3=1
      - AWS_DEFAULT_REGION=eu-west-2
      - EDGE_PORT=4566
      - SERVICES=s3,sts,iam 
    volumes:
      - "./.localstack/mounted:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
