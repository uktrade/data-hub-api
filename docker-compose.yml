version: "2"

services:

  api:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -timeout 120s
    env_file: .env
    depends_on:
      - postgres
      - opensearch
      - redis
    command: /app/start-dev.sh

  rq_short:
    build:
      context: .
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -wait tcp://api:8000 -timeout 300s
    env_file: .env
    depends_on:
      - api
    command: python short-running-worker.py

  rq_long:
    build:
      context: .
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -wait tcp://api:8000 -timeout 300s
    env_file: .env
    depends_on:
      - api
    command: python long-running-worker.py

  rq_sched:
    build:
      context: .
    volumes:
      - .:/app
    entrypoint: dockerize -wait tcp://postgres:5432 -wait tcp://opensearch:9200 -wait tcp://redis:6379 -wait tcp://api:8000 -timeout 300s
    env_file: .env
    depends_on:
      - api
    command: python cron-scheduler.py

  postgres:
    image: postgres:12
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=datahub
      - POSTGRES_PASSWORD=datahub

  opensearch:
    image: opensearchproject/opensearch:1.2.4
    environment:
      - plugins.security.disabled=true
      - cluster.name=cluster-001
      - node.name=node-001
      - discovery.type=single-node
      - bootstrap.memory_lock=true

  redis:
    image: redis:6.2.6
    restart: always
    ports:
      - "6379:6379"

  rq_exporter:
    image: mdawar/rq-exporter:latest
    ports:
      - target: 9726
        published: 9726
        protocol: tcp
        mode: host
    environment:
      RQ_REDIS_HOST: "redis"
    depends_on:
      - redis
